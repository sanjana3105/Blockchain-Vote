{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\OneDrive\\\\Desktop\\\\dVoting-master\\\\client\\\\src\\\\component\\\\Results\\\\Results.js\";\n// Node modules\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\"; // Components\n\nimport Navbar from \"../Navbar/Navigation\";\nimport NavbarAdmin from \"../Navbar/NavigationAdmin\";\nimport NotInit from \"../NotInit\"; // Contract\n\nimport getWeb3 from \"../../getWeb3\";\nimport Election from \"../../contracts/Election.json\"; // CSS\n\nimport \"./Results.css\";\nexport default class Result extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      // refreshing once\n      if (!window.location.hash) {\n        window.location = window.location + \"#loaded\";\n        window.location.reload();\n      }\n\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = Election.networks[networkId];\n        const instance = new web3.eth.Contract(Election.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          ElectionInstance: instance,\n          account: accounts[0]\n        }); // Get total number of candidates\n\n        const candidateCount = await this.state.ElectionInstance.methods.getTotalCandidate().call();\n        this.setState({\n          candidateCount: candidateCount\n        }); // Get start and end values\n\n        const start = await this.state.ElectionInstance.methods.getStart().call();\n        this.setState({\n          isElStarted: start\n        });\n        const end = await this.state.ElectionInstance.methods.getEnd().call();\n        this.setState({\n          isElEnded: end\n        }); // Loadin Candidates detials\n\n        for (let i = 1; i <= this.state.candidateCount; i++) {\n          const candidate = await this.state.ElectionInstance.methods.candidateDetails(i - 1).call();\n          this.state.candidates.push({\n            id: candidate.candidateId,\n            header: candidate.header,\n            slogan: candidate.slogan,\n            voteCount: candidate.voteCount\n          });\n        }\n\n        this.setState({\n          candidates: this.state.candidates\n        }); // Admin account and verification\n\n        const admin = await this.state.ElectionInstance.methods.getAdmin().call();\n\n        if (this.state.account === admin) {\n          this.setState({\n            isAdmin: true\n          });\n        }\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      ElectionInstance: undefined,\n      account: null,\n      web3: null,\n      isAdmin: false,\n      candidateCount: undefined,\n      candidates: [],\n      isElStarted: false,\n      isElEnded: false\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.isAdmin ? /*#__PURE__*/React.createElement(NavbarAdmin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, \"Loading Web3, accounts, and contract...\"));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.isAdmin ? /*#__PURE__*/React.createElement(NavbarAdmin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, !this.state.isElStarted && !this.state.isElEnded ? /*#__PURE__*/React.createElement(NotInit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }) : this.state.isElStarted && !this.state.isElEnded ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-item attention\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"The election is being conducted at the movement.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Result will be displayed once the election has ended.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"Go ahead and cast your vote \", \"(if not already)\", \".\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/Voting\",\n      style: {\n        color: \"black\",\n        textDecoration: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"Voting Page\"))) : !this.state.isElStarted && this.state.isElEnded ? displayResults(this.state.candidates) : null));\n  }\n\n}\n\nfunction displayWinner(candidates) {\n  const getWinner = candidates => {\n    // Returns an object having maxium vote count\n    let maxVoteRecived = 0;\n    let winnerCandidate = [];\n\n    for (let i = 0; i < candidates.length; i++) {\n      if (candidates[i].voteCount > maxVoteRecived) {\n        maxVoteRecived = candidates[i].voteCount;\n        winnerCandidate = [candidates[i]];\n      } else if (candidates[i].voteCount === maxVoteRecived) {\n        winnerCandidate.push(candidates[i]);\n      }\n    }\n\n    return winnerCandidate;\n  };\n\n  const renderWinner = winner => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-winner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"winner-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"winner-tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, \"Winner!\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, \" \", winner.header), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"winner-slogan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, winner.slogan)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"winner-votes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"votes-tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, \"Total Votes: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vote-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, winner.voteCount)));\n  };\n\n  const winnerCandidate = getWinner(candidates);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, winnerCandidate.map(renderWinner));\n}\n\nexport function displayResults(candidates) {\n  const renderResults = candidate => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, candidate.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, candidate.header), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, candidate.voteCount));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, candidates.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, displayWinner(candidates)) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-main\",\n    style: {\n      borderTop: \"1px solid\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, \"Results\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, \"Total candidates: \", candidates.length), candidates.length < 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-item attention\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"No candidates.\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, \"Candidate\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }, \"Votes\")), candidates.map(renderResults))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-item\",\n    style: {\n      border: \"1px solid black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"That is all.\")))));\n}","map":{"version":3,"sources":["C:/Users/anand/OneDrive/Desktop/dVoting-master/client/src/component/Results/Results.js"],"names":["React","Component","Link","Navbar","NavbarAdmin","NotInit","getWeb3","Election","Result","constructor","props","componentDidMount","window","location","hash","reload","web3","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","ElectionInstance","account","candidateCount","state","methods","getTotalCandidate","call","start","getStart","isElStarted","end","getEnd","isElEnded","i","candidate","candidateDetails","candidates","push","id","candidateId","header","slogan","voteCount","admin","getAdmin","isAdmin","error","alert","console","undefined","render","color","textDecoration","displayResults","displayWinner","getWinner","maxVoteRecived","winnerCandidate","length","renderWinner","winner","map","renderResults","borderTop","border"],"mappings":"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","sourcesContent":["// Node modules\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Components\nimport Navbar from \"../Navbar/Navigation\";\nimport NavbarAdmin from \"../Navbar/NavigationAdmin\";\nimport NotInit from \"../NotInit\";\n\n// Contract\nimport getWeb3 from \"../../getWeb3\";\nimport Election from \"../../contracts/Election.json\";\n\n// CSS\nimport \"./Results.css\";\n\nexport default class Result extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ElectionInstance: undefined,\n      account: null,\n      web3: null,\n      isAdmin: false,\n      candidateCount: undefined,\n      candidates: [],\n      isElStarted: false,\n      isElEnded: false,\n    };\n  }\n  componentDidMount = async () => {\n    // refreshing once\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Election.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Election.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, ElectionInstance: instance, account: accounts[0] });\n\n      // Get total number of candidates\n      const candidateCount = await this.state.ElectionInstance.methods\n        .getTotalCandidate()\n        .call();\n      this.setState({ candidateCount: candidateCount });\n\n      // Get start and end values\n      const start = await this.state.ElectionInstance.methods.getStart().call();\n      this.setState({ isElStarted: start });\n      const end = await this.state.ElectionInstance.methods.getEnd().call();\n      this.setState({ isElEnded: end });\n\n      // Loadin Candidates detials\n      for (let i = 1; i <= this.state.candidateCount; i++) {\n        const candidate = await this.state.ElectionInstance.methods\n          .candidateDetails(i - 1)\n          .call();\n        this.state.candidates.push({\n          id: candidate.candidateId,\n          header: candidate.header,\n          slogan: candidate.slogan,\n          voteCount: candidate.voteCount,\n        });\n      }\n\n      this.setState({ candidates: this.state.candidates });\n\n      // Admin account and verification\n      const admin = await this.state.ElectionInstance.methods.getAdmin().call();\n      if (this.state.account === admin) {\n        this.setState({ isAdmin: true });\n      }\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <>\n          {this.state.isAdmin ? <NavbarAdmin /> : <Navbar />}\n          <center>Loading Web3, accounts, and contract...</center>\n        </>\n      );\n    }\n\n    return (\n      <>\n        {this.state.isAdmin ? <NavbarAdmin /> : <Navbar />}\n        <br />\n        <div>\n          {!this.state.isElStarted && !this.state.isElEnded ? (\n            <NotInit />\n          ) : this.state.isElStarted && !this.state.isElEnded ? (\n            <div className=\"container-item attention\">\n              <center>\n                <h3>The election is being conducted at the movement.</h3>\n                <p>Result will be displayed once the election has ended.</p>\n                <p>Go ahead and cast your vote {\"(if not already)\"}.</p>\n                <br />\n                <Link\n                  to=\"/Voting\"\n                  style={{ color: \"black\", textDecoration: \"underline\" }}\n                >\n                  Voting Page\n                </Link>\n              </center>\n            </div>\n          ) : !this.state.isElStarted && this.state.isElEnded ? (\n            displayResults(this.state.candidates)\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction displayWinner(candidates) {\n  const getWinner = (candidates) => {\n    // Returns an object having maxium vote count\n    let maxVoteRecived = 0;\n    let winnerCandidate = [];\n    for (let i = 0; i < candidates.length; i++) {\n      if (candidates[i].voteCount > maxVoteRecived) {\n        maxVoteRecived = candidates[i].voteCount;\n        winnerCandidate = [candidates[i]];\n      } else if (candidates[i].voteCount === maxVoteRecived) {\n        winnerCandidate.push(candidates[i]);\n      }\n    }\n    return winnerCandidate;\n  };\n  const renderWinner = (winner) => {\n    return (\n      <div className=\"container-winner\">\n        <div className=\"winner-info\">\n          <p className=\"winner-tag\">Winner!</p>\n          <h2> {winner.header}</h2>\n          <p className=\"winner-slogan\">{winner.slogan}</p>\n        </div>\n        <div className=\"winner-votes\">\n          <div className=\"votes-tag\">Total Votes: </div>\n          <div className=\"vote-count\">{winner.voteCount}</div>\n        </div>\n      </div>\n    );\n  };\n  const winnerCandidate = getWinner(candidates);\n  return <>{winnerCandidate.map(renderWinner)}</>;\n}\n\nexport function displayResults(candidates) {\n  const renderResults = (candidate) => {\n    return (\n      <tr>\n        <td>{candidate.id}</td>\n        <td>{candidate.header}</td>\n        <td>{candidate.voteCount}</td>\n      </tr>\n    );\n  };\n  return (\n    <>\n      {candidates.length > 0 ? (\n        <div className=\"container-main\">{displayWinner(candidates)}</div>\n      ) : null}\n      <div className=\"container-main\" style={{ borderTop: \"1px solid\" }}>\n        <h2>Results</h2>\n        <small>Total candidates: {candidates.length}</small>\n        {candidates.length < 1 ? (\n          <div className=\"container-item attention\">\n            <center>No candidates.</center>\n          </div>\n        ) : (\n          <>\n            <div className=\"container-item\">\n              <table>\n                <tr>\n                  <th>Id</th>\n                  <th>Candidate</th>\n                  <th>Votes</th>\n                </tr>\n                {candidates.map(renderResults)}\n              </table>\n            </div>\n            <div\n              className=\"container-item\"\n              style={{ border: \"1px solid black\" }}\n            >\n              <center>That is all.</center>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}